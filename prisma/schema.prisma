// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model machine {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  status   String   @default("Disponible")
}

model folder {
  id          Int         @id @default(autoincrement())
  name        String
  userId      Int
  createdAt   DateTime    @default(now())
  flightPlans flightPlan[]
  minScheduledAt DateTime?
  maxScheduledAt DateTime?
}

model flightPlan {
  id                  Int      @id @default(autoincrement())
  customName          String
  status              String
  fileContent         String
  csvResult           Int?
  createdAt           DateTime @default(now())
  machineAssignedId   Int?
  userId              Int
  folderId            Int?
  folder              folder?  @relation(fields: [folderId], references: [id])
  uplan                 Json?    // JSON calculado
  authorizationStatus   String   @default("sin autorización") // Estado de autorización
  authorizationMessage  Json?    // Mensaje de autorización (JSON, puede ser largo)
  scheduledAt           DateTime? // <-- Nueva línea: fecha y hora de vuelo (opcional)
  externalResponseNumber String?
}

model csvResult {
  id        Int    @id @default(autoincrement())
  csvResult String
  createdAt DateTime @default(now())
}

model user {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  createdAt DateTime @default(now())
}
